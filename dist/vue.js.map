{"version":3,"file":"vue.js","sources":["../src/observer/index.js","../src/core/state.js","../src/core/init.js","../src/index.js"],"sourcesContent":["/**\n *  new Vue({\n *      data(){\n *          return {} 对这个对象进行观测\n *      }\n *  })\n */\nclass Observer {\n\tconstructor(value) {\n\t\t// console.log(\"02 Observer obj\", value);\n\t\tthis.walk(value);\n\t}\n\twalk(obj) {\n\t\t// case1: 对单纯的对象加上 get/set  {a:1}\n\t\t// case2: 对多层对象加上 get/set\n\t\tlet keys = Object.keys(obj);\n\t\tkeys.forEach((key) => {\n\t\t\tdefineReactive(obj, key, obj[key]);\n\t\t});\n\t}\n}\nfunction defineReactive(obj, key, value) {\n\t// 如果value仍然是object类型，继续递归加get/set\n\tobserve(value);\n\tObject.defineProperty(obj, key, {\n\t\tenumerable: true,\n\t\tconfigurable: true,\n\t\tget() {\n            console.log('你在取值操作', key);\n\t\t\t// console.dir({ atype: \"get 获取值\", key });\n\t\t\treturn value;\n\t\t},\n\t\tset(newValue) {\n            console.log('你在设置值操作',key,value,newValue);\n\t\t\t// console.dir({ atype: \"set 设置值\", value, newValue });\n\t\t\tif (value === newValue) return;\n            observe(newValue); // 用户将值改为对象类型，对新赋值的对象再进行递归观测\n\t\t\tvalue = newValue; // 不允许使用 obj[key] = value 赋值，造成死循环\n\t\t},\n\t});\n}\n\n// data 必须是个对象才Object.defineProperty\nexport function observe(data) {\n\t// 只对对象进行观测 基本类型和null不观测\n\tif (typeof data !== \"object\" && data !== null) {\n\t\treturn;\n\t}\n\n\treturn new Observer(data);\n}\n","import { observe } from \"../observer/index.js\";\n\n// 初始化状态 vue中很多状态 data props methods watch computed\nexport function initState(vm) {\n\tconsole.log(\"01 init state\", vm);\n    const { props, methods, data, computed, watch } = vm.$options;\n    // 初始化data\n\tif (data) {\n\t\tinitData(vm);\n    }\n    // 初始化props\n\tif (props) {\n\t\tinitProps(vm);\n    }\n    // 初始化methods\n\tif (methods) {\n\t\tinitMethods(vm);\n    }\n    // 初始化computed\n\tif (computed) {\n\t\tinitComputed(vm);\n    }\n    // 初始化watch\n\tif (watch) {\n\t\tinitWatch(vm);\n\t}\n}\n\n/** 数据响应式原理\n *  new Vue({\n *    data(){\n *      return {}\n *    }\n *\n *    data: {}\n * })\n */\nfunction initData(vm) {\n\tlet data = vm.$options.data;\n    // case1 data是方法直接调用 data.call(vm)就是执行data(){}这个方法获得结果对象\n    // case2 否则直接用对象\n    // 骚操作: 在实例vm上挂一个_data就可以拿到data(){}的返回值\n\tdata = vm._data = typeof data === \"function\" ? data.call(vm) : data; \n    \n   /**\n    * 数据劫持方案 利用Object.defineProperty\n    * 数组 单独处理\n    */\n\tobserve(data);\n}\nfunction initProps(vm) {}\nfunction initMethods(vm) {}\nfunction initComputed(vm) {}\nfunction initWatch(vm) {}\n","import { initState } from \"./state\";\n\n// 将当前实例传入 进行方法扩展 插件写法\nexport function initMixin(Vue){\n    Vue.prototype._init = function(options){\n        const vm = this; // vm=new Vue() \n        vm.$options = options; // 可以在vm上直接拿到用户new Vue(options) 里的options对象\n        \n        // 初始化状态\n        initState(vm);\n    }\n}","import { initMixin } from './core/init';\nfunction Vue(options) {\n    this._init(options); // new Vue({}) 将new里的配置直接传入_init\n}\n// 在Vue添加原型方法 _init\ninitMixin(Vue);\n\nexport default Vue"],"names":["Observer","constructor","value","walk","obj","keys","Object","forEach","key","defineReactive","observe","defineProperty","enumerable","configurable","get","console","log","set","newValue","data","initState","vm","props","methods","computed","watch","$options","initData","_data","call","initMixin","Vue","prototype","_init","options"],"mappings":"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"}